{"version":3,"sources":["context/AuthProvider.js","context/AwsProvider.js","logo.svg","components/login.js","components/viewer.tsx","components/dashboard.js","components/header.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","React","createContext","initialState","isAuthenticated","Address","SessionToken","AccessKeyId","SecretKey","Expiration","reducer","state","action","type","localStorage","setItem","JSON","stringify","payload","address","sessionToken","accessKeyId","secretKey","expiration","clear","AuthProvider","props","useReducer","dispatch","Provider","value","authState","children","AwsContext","AwsProvider","useState","awsClient","setAwsClient","web3","Web3","givenProvider","onboarding","MetaMaskOnboarding","forwarderOrigin","Login","useContext","isSubmitting","errorMessage","isMetamaskInstalled","data","setData","useEffect","checkMetaMaskClient","ethereum","window","Boolean","isMetaMask","isMetaMaskInstalled","handleFormSubmit","event","a","preventDefault","request","method","accounts","axios","process","toLowerCase","validateStatus","nonce","post","headers","console","log","Attributes","eth","personal","sign","utils","sha3","signature","aws","AwsClient","secretAccessKey","region","service","message","statusText","className","onSubmit","disabled","src","logo","alt","onClick","startOnboarding","API_KEY","throttle","createAlchemyWeb3","Date","now","pThrottle","limit","interval","App","setAddress","loading","setLoading","nfts","setNfts","length","lookupNFT","fetch","response","json","i","ownedNfts","val","contract","tokenId","id","getNftMeta","then","meta","prevValues","throttled","onChange","e","currentTarget","trim","map","nft","nftData","imageUrl","startsWith","split","dataJson","parse","atob","renderNft","button","marginTop","Dashboard","setState","showGallery","setGallery","fetchHelloAPI","style","Header","href","Main","getItem","today","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58b16a95.chunk.js","sourcesContent":["import React from 'react';\n\nexport const AuthContext = React.createContext();\n\nconst initialState = {\n  isAuthenticated: false,\n  Address: null,\n  SessionToken: null,\n  AccessKeyId: null,\n  SecretKey: null,\n  Expiration: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      localStorage.setItem('address', JSON.stringify(action.payload.address));\n      localStorage.setItem(\n        'sessionToken',\n        JSON.stringify(action.payload.sessionToken)\n      );\n      localStorage.setItem(\n        'accessKeyId',\n        JSON.stringify(action.payload.accessKeyId)\n      );\n      localStorage.setItem(\n        'secretKey',\n        JSON.stringify(action.payload.secretKey)\n      );\n      localStorage.setItem(\n        'expiration',\n        JSON.stringify(action.payload.expiration)\n      );\n      return {\n        ...state,\n        isAuthenticated: true,\n        address: action.payload.address,\n        sessionToken: action.payload.sessionToken,\n        accessKeyId: action.payload.accessKeyId,\n        SecretKey: action.payload.secretKey,\n        expiration: action.payload.expiration,\n      };\n    case 'LOGOUT':\n      localStorage.clear();\n      return {\n        ...state,\n        isAuthenticated: false,\n        address: null,\n        sessionToken: null,\n        accessKeyId: null,\n        secretKey: null,\n        expiration: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = (props) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  return (\n    <AuthContext.Provider\n      value={{\n        authState: state,\n        dispatch,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const AwsContext = React.createContext();\n\nexport const AwsProvider = (props) => {\n  const [awsClient, setAwsClient] = useState(null);\n\n  return (\n    <AwsContext.Provider\n      value={{\n        awsClient,\n        setAwsClient,\n      }}\n    >\n      {props.children}\n    </AwsContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect } from 'react';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport { AwsClient } from 'aws4fetch';\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport logo from '../logo.svg';\nimport { AuthContext } from '../context/AuthProvider';\nimport { AwsContext } from '../context/AwsProvider';\n\nconst web3 = new Web3(Web3.givenProvider);\nconst forwarderOrigin = 'http://localhost:3000';\nconst onboarding = new MetaMaskOnboarding({ forwarderOrigin });\n\nconst isMetaMaskInstalled = () => {\n  const { ethereum } = window;\n  return Boolean(ethereum && ethereum.isMetaMask);\n};\n\nexport const Login = () => {\n  const { dispatch } = React.useContext(AuthContext);\n  const { awsClient, setAwsClient } = React.useContext(AwsContext);\n\n  const initialState = {\n    isSubmitting: false,\n    errorMessage: null,\n    isMetamaskInstalled: true,\n  };\n\n  const [data, setData] = React.useState(initialState);\n\n  useEffect(() => {\n    checkMetaMaskClient();\n  }, []);\n\n  const installMetamask = () => {\n    onboarding.startOnboarding();\n  };\n\n  const checkMetaMaskClient = () => {\n    if (isMetaMaskInstalled()) {\n      data.isMetamaskInstalled === false &&\n        setData({\n          ...data,\n          isMetamaskInstalled: true,\n        });\n      return true;\n    }\n    return false;\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    setData({\n      ...data,\n      isSubmitting: true,\n      errorMessage: null,\n    });\n\n    try {\n      if (checkMetaMaskClient()) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n        const address = accounts[0];\n        let {\n          data: { nonce },\n        } = await axios(\n          `${process.env.REACT_APP_API_BASE_URL}${\n            process.env.REACT_APP_API_GET_NONCE_PATH\n          }?address=${address.toLowerCase()}`,\n          {\n            method: 'GET',\n            validateStatus: false,\n          }\n        );\n        if (!nonce) {\n          const { data } = await axios.post(\n            `${process.env.REACT_APP_API_BASE_URL}${process.env.REACT_APP_API_SIGNUP_PATH}`,\n            { address: address.toLowerCase() },\n            {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            }\n          );\n          console.log(data);\n          if (data && data.Attributes) {\n            nonce = data.Attributes.nonce;\n          }\n        }\n\n        const signature = await web3.eth.personal.sign(\n          web3.utils.sha3(`Welcome message, nonce: ${nonce}`),\n          address\n        );\n\n        const { data } = await axios.post(\n          `${process.env.REACT_APP_API_BASE_URL}${process.env.REACT_APP_API_LOGIN_PATH}`,\n          {\n            address,\n            signature,\n          },\n          {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n        if (data && data.AccessKeyId) {\n          dispatch({\n            type: 'LOGIN',\n            payload: {\n              isAuthenticated: true,\n              accessKeyId: data.AccessKeyId,\n              address,\n              sessionToken: data.SessionToken,\n              secretKey: data.SecretKey,\n              expiration: data.Expiration,\n            },\n          });\n          const aws = new AwsClient({\n            accessKeyId: data.AccessKeyId,\n            secretAccessKey: data.SecretKey,\n            sessionToken: data.SessionToken,\n            region: 'us-east-1',\n            service: 'execute-api',\n          });\n          setAwsClient(aws);\n        } else {\n          setData({\n            isSubmitting: false,\n            errorMessage: 'Login failed',\n            isMetamaskInstalled: true,\n          });\n        }\n      } else {\n        setData({\n          ...data,\n          isSubmitting: false,\n          errorMessage: \"Metamask isn't installed, Please install Metamask\",\n        });\n      }\n    } catch (error) {\n      setData({\n        ...data,\n        isSubmitting: false,\n        errorMessage: error.message || error.statusText,\n      });\n    }\n  };\n\n  return (\n    <div className='login-container'>\n      <div className='card'>\n        <div className='container'>\n          <form onSubmit={handleFormSubmit}>\n            <h1>Login</h1>\n            {data.errorMessage && (\n              <span className='form-error'>{data.errorMessage}</span>\n            )}\n            {data.isMetamaskInstalled ? (\n              <button disabled={data.isSubmitting}>\n                {data.isSubmitting ? (\n                  <img className='spinner' src={logo} alt='loading icon' />\n                ) : (\n                  'Login with Metamask'\n                )}\n              </button>\n            ) : (\n              <button type='button' onClick={installMetamask}>\n                Install Metamask'\n              </button>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport pThrottle from 'p-throttle';\n\nimport { createAlchemyWeb3 } from '@alch/alchemy-web3';\nimport { AuthContext } from '../context/AuthProvider';\n\nconst API_KEY = 'U42YTQClHQMz1dRyy087pHijX8I2-VTC';\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\n//dummy wallet address = 0xeb834ae72b30866af20a6ce5440fa598bfad3a42;\nconst web3 = createAlchemyWeb3(\n  `wss://eth-mainnet.ws.alchemyapi.io/ws/${API_KEY}`,\n);\nconst now = Date.now();\nconst throttle:any = pThrottle({\n  limit: 5,\n  interval: 1000\n});\n\nfunction App() {\n  const { authState } = React.useContext(AuthContext);\n  const [address, setAddress] = useState(authState.address);\n  const [loading, setLoading] = useState(true);\n  const [nfts, setNfts] = useState<any[]>([]);\n\n  useEffect(() => {\n    if (address.length == '0xeb834ae72b30866af20a6ce5440fa598bfad3a42'.length) {\n      lookupNFT(address);\n      setNfts([]);\n    }\n  },[address]);\n\n  const lookupNFT = async (address:string) => { \n    setLoading(true);\n    const response = await fetch(`https://eth-mainnet.g.alchemy.com/${API_KEY}/v1/getNFTs/?owner=${address}`);\n    const data = await response.json();\n    const res = [];\n    setLoading(false);\n\n    for (let i=0; i < data.ownedNfts.length; i++) {\n      const val = data.ownedNfts[i];\n      const address = val.contract.address;\n      const tokenId = val.id.tokenId;\n      getNftMeta(address, tokenId)\n      .then((meta:any) => {\n        setNfts(prevValues => [...prevValues, meta])\n      })\n    }\n  } \n\n  const getNftMeta = async (address:string, tokenId: string) => {\n    const throttled = throttle(fetch);\n\n    const response = await throttled(`https://eth-mainnet.g.alchemy.com/${API_KEY}/v1/getNFTMetadata?contractAddress=${address}&tokenId=${tokenId}&tokenType=erc721`);\n    return response.json();\n  }\n\n  const handleAddressChange = (e:React.FormEvent<HTMLInputElement>)=> {\n    const val = e.currentTarget.value.trim(); \n    setAddress(val);\n  }\n\n  const handleConnect = (evt:any) => {\n    //web3.eth.requestAccounts();\n    if (window.ethereum) {\n      window.ethereum\n        .enable()\n        .then((accounts:any) => {\n          // Metamask is ready to go!\n          setAddress(accounts[0]);\n        })\n        .catch((reason:any) => {\n          // Handle error. Likely the user rejected the login.\n        });\n    } else {\n      // The user doesn't have Metamask installed.\n    }\n  }\n\n  const renderNft = (nft:any) => {\n    let dataJson:any = {};\n    const nftData:any = {};\n\n    if ('name' in nft) {\n      nftData['name'] = nft['name'];\n    }\n\n    if ('metadata' in nft) {\n      const imageUrl = nft['metadata']['image'];\n\n      if (!imageUrl) return <div className='renderError'>Not supported: {JSON.stringify(nft)}</div>;\n\n      if (imageUrl.startsWith('ipfs://')) {\n        nftData['image'] = `https://ipfs.io/ipfs/${imageUrl.split('//')[1]}`;\n      }\n      else {\n        nftData['image'] = imageUrl;\n      }\n      \n    }\n    else if ('externalDomainViewUrl' in nft) {\n      \n      const [_, data] = nft['externalDomainViewUrl'].split(',');\n\n      if (!data) return <div className='renderError'>Not supported: {JSON.stringify(nft)}</div>;\n\n      const dataJson = JSON.parse(atob(data));\n      nftData['image'] = dataJson['image'];\n\n    }\n    return <div><div>Name: { dataJson['name'] }</div><div><img className='nftImage' src={nftData['image']} /></div></div>;\n  };\n\n  return (\n    <div className=\"viewer\">\n      <h6>Your NFT address</h6>\n      <input type=\"text\" value={address} onChange={handleAddressChange} />\n      { loading && <p>Loading your wallet data</p> }\n      { !loading && !nfts.length && <p>No NFT in this wallet</p>}\n      { !loading && nfts.map(nft => {\n          return renderNft(nft);\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport { Button, Input } from 'antd'\nimport { AwsContext } from '../context/AwsProvider';\nimport Viewer from './viewer';\n\nfunction Dashboard() {\n  const { awsClient } = React.useContext(AwsContext);\n  const [state, setState] = useState({ data: '' });\n  const [showGallery, setGallery] = useState(false);\n\n  useEffect(() => {\n    const fetchHelloAPI = async () => {\n      if (awsClient) {\n        const request = await awsClient.sign(\n          `${process.env.REACT_APP_API_BASE_URL}${process.env.REACT_APP_API_HELLO_PATH}?name=there`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const response = await fetch(request);\n        setState(await response.json());\n      }\n    };\n    fetchHelloAPI();\n  }, [awsClient]);\n\n  async function savePhoto() {\n  }\n\n  function toggleGallery() {\n    setGallery(!showGallery);\n  }\n  \n  if (!showGallery) {\n    return (\n      <div className='home'>\n        <div className='content'>\n          <h1>{state.data}</h1>\n        </div>\n      <Button style={button} type=\"primary\" onClick={toggleGallery}>View Gallery</Button>\n      </div>\n    );\n  }\n  else {\n    return <Viewer></Viewer> \n  }\n}\n\nconst button = { marginTop: 10 }\n\nexport default Dashboard;\n","import React from 'react';\nimport { AuthContext } from '../context/AuthProvider';\n\nexport const Header = () => {\n  const { authState, dispatch } = React.useContext(AuthContext);\n  return (\n    <nav id='navigation'>\n      <h1 href='#' className='logo'>\n        LOGO\n      </h1>\n      <button\n        onClick={() =>\n          dispatch({\n            type: 'LOGOUT',\n          })\n        }\n      >\n        {authState.isAuthenticated && <h1>LOGOUT</h1>}\n      </button>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { AwsClient } from 'aws4fetch';\n\nimport './App.css';\nimport Login from './components/login';\nimport Dashboard from './components/dashboard';\nimport Header from './components/header';\nimport { AuthContext } from './context/AuthProvider';\nimport { AwsContext } from './context/AwsProvider';\n\nfunction Main() {\n  const { authState, dispatch } = useContext(AuthContext);\n  const { awsClient, setAwsClient } = useContext(AwsContext);\n\n  React.useEffect(() => {\n    const address = JSON.parse(localStorage.getItem('address') || null);\n    const sessionToken = JSON.parse(\n      localStorage.getItem('sessionToken') || null\n    );\n    const secretKey = JSON.parse(localStorage.getItem('secretKey') || null);\n    const accessKeyId = JSON.parse(localStorage.getItem('accessKeyId') || null);\n    const expiration = JSON.parse(localStorage.getItem('expiration') || null);\n    const today = new Date();\n\n    if (address && sessionToken && expiration) {\n      if (new Date(expiration) > today) {\n        dispatch({\n          type: 'LOGIN',\n          payload: {\n            address,\n            sessionToken,\n            secretKey,\n            accessKeyId,\n            expiration,\n          },\n        });\n        const aws = new AwsClient({\n          accessKeyId,\n          secretAccessKey: secretKey,\n          sessionToken,\n          region: 'us-east-1',\n          service: 'execute-api',\n        });\n        setAwsClient(aws);\n      } else {\n        dispatch({\n          type: 'LOGOUT',\n        });\n      }\n    }\n  }, []);\n\n\n  console.log('authState:');\n  console.log(authState)\n\n  return (\n    <>\n      <Header />\n      <div className='app-container'>\n        {!authState.isAuthenticated ? <Login /> : <Dashboard />}\n      </div>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { AuthProvider } from './context/AuthProvider';\nimport { AwsProvider } from './context/AwsProvider';\n\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <AwsProvider>\n        <Main />\n      </AwsProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}